html,
body {
    margin: 0px;
    padding: 0px;
    width: 100%;
    scrollbar-width: none;
    font-family: 'Trebuchet MS', sans-serif;
}

body[palette=dnd] {
    background-color: rgb(117, 11, 11);
}

body[palette=pathfinder] {
    background-color: rgb(40, 44, 52);
}

/* Tabs */

.tab-container {
    align-items: center;
    height: 12vh;
    width: 80%;
    margin: auto;
    display: flex;
    flex-wrap: nowrap;
}

.tab {
    transition: opacity 1s;
    opacity: 0.1;
    font-size: 5vh;
    flex-grow: 1;
    flex-basis: 0;
    text-align: center;
    border-radius: 2vh;
}

.tab:hover {
    opacity: 1;
    cursor: pointer;
}

.tab[palette=dnd] {
    color: rgb(255, 223, 207);
}

.tab[palette=pathfinder] {
    color: rgb(203, 212, 227);
}

/* Scores */

.flex-container {
    transition: opacity 0.5s;
    align-items: center;
    height: 76vh;
    width: 50%;
    margin: auto;
    display: flex;
    flex-wrap: nowrap;
    opacity: 0;
}

.child {
    font-size: 6vw;
    flex-grow: 1;
    flex-basis: auto;
    text-align: center;
}

.child[palette=dnd] {
    color: rgb(255, 223, 207);
}

.child[palette=pathfinder] {
    color: rgb(203, 212, 227);
}

/* Point field */

.input-button {
    transition: opacity 1s;
    opacity: 0.1;
    padding: 2vh;
    width: fit-content;
    margin: auto;
}

.input-button:hover {
    opacity: 1;
}

.input-child {
    vertical-align: middle;
    display: inline-block;
    font-size: 5vh;
}

.input-child[palette=dnd] {
    color: rgb(255, 223, 207);
}

.input-child[palette=pathfinder] {
    color: rgb(203, 212, 227);
}

.input-desc {
    padding-left: 2vw;
}

input[type=number] {
    max-width: 12vw;
    height: 8vh;
    border-radius: 4vh;
    font-size: 5vh;
    text-align: center;
    box-sizing: border-box;
    border-width: 2px;
    border-style: solid;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type=number] {
    -moz-appearance: textfield;
}

input[palette=dnd] {
    color: rgb(255, 223, 207);
    background-color: rgb(117, 11, 11);
    border-color: rgb(130, 44, 44);
}

input[palette=pathfinder] {
    color: rgb(203, 212, 227);
    background-color: rgb(40, 44, 52);
    border-color: rgb(62, 66, 78);
}

/**
 * Loading dots animation. Under MIT license from:
 * https://nzbin.github.io/three-dots/
 */

.dot-container {
    z-index: -1;
    transition: opacity 0.5s;
    opacity: 1;
    align-items: center;
    justify-content: center;
    position: absolute;
    height: 100%;
    width: 100%;
    display: flex;
    flex-wrap: nowrap;
}

.dot-elastic {
    width: 2vw;
    height: 2vw;
    border-radius: 1vw;
    animation: dotElastic 1s infinite linear;
}

.dot-elastic[palette=dnd] {
    color: rgb(255, 223, 207);
    background-color: rgb(255, 223, 207);
}

.dot-elastic[palette=pathfinder] {
    color: rgb(203, 212, 227);
    background-color: rgb(203, 212, 227);
}

.dot-elastic::before,
.dot-elastic::after {
    color: inherit;
    background-color: inherit;
    transition: opacity 0.5s;
    content: '';
    display: inline-block;
    position: absolute;
    top: 0;
}

.dot-elastic::before {
    left: -4vw;
    width: 2vw;
    height: 2vw;
    border-radius: 1vw;
    animation: dotElasticBefore 1s infinite linear;
}

.dot-elastic::after {
    left: 4vw;
    width: 2vw;
    height: 2vw;
    border-radius: 1vw;
    animation: dotElasticAfter 1s infinite linear;
}

@keyframes dotElasticBefore {
    0% {
        transform: scale(1, 1);
    }

    25% {
        transform: scale(1, 1.5);
    }

    50% {
        transform: scale(1, 0.67);
    }

    75% {
        transform: scale(1, 1);
    }

    100% {
        transform: scale(1, 1);
    }
}

@keyframes dotElastic {
    0% {
        transform: scale(1, 1);
    }

    25% {
        transform: scale(1, 1);
    }

    50% {
        transform: scale(1, 1.5);
    }

    75% {
        transform: scale(1, 1);
    }

    100% {
        transform: scale(1, 1);
    }
}

@keyframes dotElasticAfter {
    0% {
        transform: scale(1, 1);
    }

    25% {
        transform: scale(1, 1);
    }

    50% {
        transform: scale(1, 0.67);
    }

    75% {
        transform: scale(1, 1.5);
    }

    100% {
        transform: scale(1, 1);
    }
}